set cut_paste_input [stack 0]
version 13.2 v1
push $cut_paste_input
Group {
 name Sharpie
 tile_color 0xcc804eff
 selected true
 xpos -3318
 ypos 636
 addUserKnob {20 User l Sharpie}
 addUserKnob {26 text l "" +STARTLINE T "<font size=\"+5\"> Sharpie"}
 addUserKnob {26 text_1 l "" +STARTLINE T "<font size=\"-1\"> Bilateral sharpen using mult/div"}
 addUserKnob {26 ""}
 addUserKnob {7 amount R 0 2}
 amount 1
 addUserKnob {6 apply_log l "Apply in log" +STARTLINE}
 addUserKnob {26 ""}
 addUserKnob {26 text_2 l "" +STARTLINE T "<font size=\"-1\"> Bilateral prevents oversharpening by preserving edges that are already sharp"}
 addUserKnob {4 method M {Bilateral Gaussian}}
 addUserKnob {7 size}
 size 20
 addUserKnob {7 edge_preserve l "edge preservation"}
 edge_preserve 0.8
 addUserKnob {6 preview_filter l "preview filter" +STARTLINE}
 addUserKnob {26 ""}
 addUserKnob {41 maskChannel l "mask channel" T Keymix1.maskChannel}
 addUserKnob {41 invertMask l invert -STARTLINE T Keymix1.invertMask}
 addUserKnob {7 mix}
 mix 1
}
 Input {
  inputs 0
  name mask
  xpos 748
  ypos 266
  number 1
 }
 Invert {
  name Invert1
  xpos 748
  ypos 305
 }
 Input {
  inputs 0
  name img
  xpos 538
  ypos -634
 }
 Dot {
  name Dot69
  xpos 572
  ypos -483
 }
set N4d88e400 [stack 0]
 Dot {
  name Dot3
  xpos 351
  ypos -483
 }
 Dot {
  name Dot2
  xpos 351
  ypos 314
 }
set N4d88dc00 [stack 0]
push $N4d88e400
 Dot {
  name Dot70
  xpos 1017
  ypos -483
 }
set N4d88d800 [stack 0]
 Dot {
  name Dot1
  xpos 1328
  ypos -483
 }
 Blur {
  size {{parent.size}}
  name Blur1
  label "\[value size]"
  xpos 1294
  ypos -400
 }
push $N4d88d800
 AddChannels {
  channels rgba
  name AddChannels1
  xpos 983
  ypos -448
 }
 BlinkScript {
  recompileCount 4
  ProgramGroup 1
  KernelDescription "2 \"BlinkBilateral\" iterate pixelWise a3e3bd45f211680b8093eaf4dce51a463d308956fa5f44aa32838d2d8b99ec33 2 \"src\" Read Random \"dst\" Write Point 3 \"FilterSize\" Int 1 DwAAAA== \"PositionalSigma\" Float 1 AAAgQQ== \"ColorSigma\" Float 1 zczMPQ== 3 \"MSIZE\" 1 1 \"SIGMA\" 1 1 \"BSIGMA\" 1 1 1 \"coefficients\" Float 3 1 AAAAAAAAAAAAAAAAAAAAAA=="
  kernelSource "//Port of mrharicot's bilateral implamentation.\n\nkernel BlinkBilateral : ImageComputationKernel<ePixelWise>\n\{\n  Image<eRead, eAccessRandom, eEdgeClamped> src; // the input image\n  Image<eWrite> dst; // the output image\n\n  param:\n    int MSIZE; // This parameter is made available to the user.\n    float SIGMA;\n    float BSIGMA;\n\n  local:\n    float3 coefficients;  // This local variable is not exposed to the user.\n\n  // In define(), parameters can be given labels and default values.\n  void define() \{\n    defineParam(MSIZE, \"FilterSize\", 15);\n    defineParam(SIGMA, \"PositionalSigma\", 10.0f);\n    defineParam(BSIGMA, \"ColorSigma\", 0.1f);    \n  \}\n\nfloat normpdf(float x, float sigma)\n\{\n  return 0.39894f*exp(-0.5f*x*x/(sigma*sigma))/sigma;\n\}\n\nfloat normpdf3(float3 v, float sigma)\n\{\n  return 0.39894f*exp(-0.5f*dot(v,v)/(sigma*sigma))/sigma;\n\}\n\n  void process(int2 pos) \{\n  float4 ss = src(pos.x,pos.y);\n  float3 c = float3(ss.x,ss.y,ss.z);\n   \n\n    const int kSize = (MSIZE-1)/2;\n\n    float kernelB\[100];\n    float3 final_colour = float3(0.0);\n    \n\n    float Z = 0.0;\n    for (int j = 0; j <= kSize; ++j)\n    \{\n      kernelB\[kSize+j] = kernelB\[kSize-j] = normpdf(float(j), SIGMA);\n    \}\n    \n    \n    float3 cc;\n    float factor;\n    float bZ = 1.0f/normpdf(0.0f, BSIGMA);\n    for (int i=-kSize; i <= kSize; ++i)\n    \{\n      for (int j=-kSize; j <= kSize; ++j)\n      \{\n        ss = src(pos.x+i,pos.y+j);\n        cc = float3(ss.x,ss.y,ss.z);\n        factor = normpdf3(cc-c, BSIGMA)*bZ*kernelB\[kSize+j]*kernelB\[kSize+i];\n        Z += factor;\n        final_colour += factor*cc;\n\n      \}\n    \}    \n    final_colour = final_colour/Z;\n    dst() = float4(final_colour.x,final_colour.y,final_colour.z, 1.0f);\n  \}\n\};\n"
  rebuild ""
  BlinkBilateral_FilterSize {{parent.size}}
  BlinkBilateral_PositionalSigma {{parent.size/5}}
  BlinkBilateral_ColorSigma {{max(2-parent.edge_preserve*2,0.01)}}
  rebuild_finalise ""
  name BlinkScript2
  xpos 983
  ypos -402
 }
 Switch {
  inputs 2
  which {{method}}
  name Switch2
  xpos 1143
  ypos -283
 }
set N4d88c400 [stack 0]
 Dot {
  name Dot4
  xpos 1177
  ypos 138
 }
push $N4d88e400
 Colorspace {
  colorspace_out AlexaV3LogC
  name Colorspace6
  label "\[value colorspace_in] - \[value colorspace_out]"
  xpos 538
  ypos -217
  disable {{1-apply_log}}
 }
set N4d817800 [stack 0]
push $N4d88c400
 Colorspace {
  colorspace_out AlexaV3LogC
  name Colorspace7
  label "\[value colorspace_in] - \[value colorspace_out]"
  xpos 693
  ypos -289
  disable {{1-apply_log}}
 }
 Merge2 {
  inputs 2
  operation divide
  name Merge26
  xpos 693
  ypos -211
 }
 Grade {
  add -1
  black_clamp false
  name Grade34
  xpos 693
  ypos -187
 }
 Grade {
  multiply {{parent.amount}}
  black_clamp false
  name Grade35
  xpos 693
  ypos -153
 }
 Grade {
  add 1
  black_clamp false
  name Grade36
  xpos 693
  ypos -116
 }
push $N4d817800
 Merge2 {
  inputs 2
  operation multiply
  name Merge27
  xpos 538
  ypos -116
 }
 Colorspace {
  colorspace_in AlexaV3LogC
  name Colorspace8
  label "\[value colorspace_in] - \[value colorspace_out]"
  xpos 538
  ypos -34
  disable {{1-apply_log}}
 }
 Switch {
  inputs 2
  which {{preview_filter}}
  name preview
  xpos 538
  ypos 135
 }
 Keymix {
  inputs 3
  name Keymix1
  xpos 538
  ypos 305
  disable {{"1-\[exists parent.input1]"}}
 }
push $N4d88dc00
 Dot {
  name Dot5
  xpos 351
  ypos 409
 }
 Dissolve {
  inputs 2
  which {{parent.mix}}
  name Dissolve1
  xpos 538
  ypos 400
 }
 Output {
  name Output1
  selected true
  xpos 538
  ypos 487
 }
end_group
